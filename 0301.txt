/*
Aqua Test Suite

0301: Catch exception in callee

- output
11
10
9
8
7
6
5
4
3
2
1
0
42
256

*/

.class Exception
{
	.field public int32 num

	.method public function .ctor(int32)
	{
		ldfi	$0, Exception::num, $1
		ret
	}
}

.class Callee
{
	.method static public function callme(int32)
	{
		/* If parameter > 10 then throw exception, or call self */
		.try {
			ldi	$1, 10
			jlei	$0, $1, CALLSELF

			ldi	$3, 42
			new	$1, Exception::.ctor(int32)
			throw	$1

			/* Should not come here */
			ldi	$0, 12345
			printi	$0
			leave	LABEL

CALLSELF:		addi	$1, $0, 1
			call	$1, Callee::callme(int32)

			/* Should not come here */
			ldi	$0, 12345
			printi	$0
			leave	LABEL

		}
		.finally {
			printi	$0
			endfinally
		}
LABEL:		ret
	}
}

.class Test
{
	.method static public function Main()
	{
		.try {
			ldi	$0, 0
			call	$0, Callee::callme(int32)
			leave	LABEL
		}
		.catch (Exception $0) {
			ldfi	$0, $0, Exception::num
			printi	$0
			leave	LABEL
		}
		.finally {
			ldi	$0, 256
			printi	$0
			endfinally
		}
LABEL:		ret
	}
}
